import telebot
import datetime
import json
import requests
from telebot import custom_filters
from telebot import StateMemoryStorage
from telebot.handler_backends import StatesGroup, State


state_storage = StateMemoryStorage()

bot = telebot.TeleBot("6474608268:AAH1y-R4mWRsTOSj2Y2ZNOMGNoEmVP3gmPY", state_storage=state_storage, parse_mode='Markdown')


class PollState(StatesGroup):
    name = State()
    age = State()


class HelpState(StatesGroup):
    wait_text = State()


text_poll = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üëã"
text_button_1 = "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ ‚ò∫Ô∏è"
text_button_2 = "–ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã üíª"
text_button_3 = "–ü–æ–≥–æ–¥–∞ ‚òîÔ∏è"
API = '05a79b3408ba4e7b355bafb84df4912a'


menu_keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
menu_keyboard.add(
    telebot.types.KeyboardButton(
        text_poll,
    )
)
menu_keyboard.add(
    telebot.types.KeyboardButton(
        text_button_1,
    )
)

menu_keyboard.add(
    telebot.types.KeyboardButton(
        text_button_2,
    ),
    telebot.types.KeyboardButton(
        text_button_3,
    )
)


@bot.message_handler(state="*", commands=['start'])
def start_ex(message):
    bot.send_message(
        message.chat.id,
        '–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?',
        reply_markup=menu_keyboard)


@bot.message_handler(func=lambda message: text_poll == message.text)
def first(message):
    bot.send_message(message.chat.id, '–°—É–ø–µ—Ä! –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?')
    bot.set_state(message.from_user.id, PollState.name, message.chat.id)


@bot.message_handler(state=PollState.name)
def name(message):
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data['name'] = message.text
    bot.send_message(message.chat.id, '–°—É–ø–µ—Ä! –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç!')
    bot.set_state(message.from_user.id, PollState.age, message.chat.id)


@bot.message_handler(state=PollState.age)
def age(message):
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data['age'] = message.text
    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!', reply_markup=menu_keyboard)
    bot.delete_state(message.from_user.id, message.chat.id)


@bot.message_handler(func=lambda message: text_button_1 == message.text)
def help_command(message):
    bot.send_message(message.chat.id, "–Ø —è–≤–ª—è—é—Å—å —Ç–µ—Å—Ç–æ–≤—ã–º –±–æ—Ç–æ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –º–∞—Ä–∞—Ñ–æ–Ω–∞ –ø–æ Python!", reply_markup=menu_keyboard)


@bot.message_handler(func=lambda message: text_button_2 == message.text)
def help_command(message):
    bot.send_message(message.chat.id, "–î–∞ –∫–æ–Ω–µ—á–Ω–æ, –≤–æ—Ç –ø–∞—Ä–æ—á–∫–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤:\n1 - [–°–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ –ø–æ —Ç–µ–∫—Å—Ç—É üèûÔ∏èÔ∏è](https://rudalle.ru/kandinsky22) \n"
                                      "2 - [–ò–∑–±–∞–≤–ª—è–µ—Ç –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å –æ—Ç —à—É–º–æ–≤ üéß](https://audo.ai/)\n"
                                      "3 - [–†–∞—Å–∫—Ä–∞—à–∏–≤–∞–µ—Ç —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ —Å–Ω–∏–º–∫–∏ üñºÔ∏è](https://palette.fm/)\n"
                                      "4 - [–£–±–∏—Ä–∞–µ—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã —Å —Ñ–æ—Ç–æ üîç](https://cleanup.pictures/)\n"
                                      "5 - [–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ä–∞—Å–º–µ—Ä —Ñ–æ—Ç–æ –∏ —É–ª—É—á—à–∞–µ—Ç –∏—Ö –∫–∞—á–µ—Å—Ç–≤–æ üëÅÔ∏è‚Äçüó®Ô∏è](https://www.upscale.media/ru)", disable_web_page_preview=True, reply_markup=menu_keyboard)


def get_weather(message):
    city = '–ú–æ—Å–∫–≤–∞'
    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&lang=ru&&units=metric')
    if res.status_code == 200:
        data = json.loads(res.text)
        temp = int(data["main"]["temp"])
        humidity = data["main"]["humidity"]
        wind = data["wind"]["speed"]
        code_to_smile = {
            "Clear": "–Ø—Å–Ω–æ \U00002600",
            "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
            "Rain": "–î–æ–∂–¥—å \U00002614",
            "Drizzle": "–î–æ–∂–¥—å \U00002614",
            "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
            "Snow": "–°–Ω–µ–≥ \U0001F328",
            "Mist": "–¢—É–º–∞–Ω \U0001F32B"
        }
        weather_description = data["weather"][0]["main"]

        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞..."
        bot.reply_to(message, f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}\n'
                              f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp} ¬∞C {wd}\n'
                              f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity} % \n'
                              f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å \n'
                              f'–£–¥–∞—á–∏!')
    else:
        bot.reply_to(message, '–ì–æ—Ä–æ–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ')


@bot.message_handler(func=lambda message: text_button_3 == message.text)
def help_command(message):
    get_weather(message)
    bot.send_message(message.chat.id, "–≠—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –≤ –ú–æ—Å–∫–≤–µ", reply_markup=menu_keyboard)


bot.add_custom_filter(custom_filters.StateFilter(bot))
bot.add_custom_filter(custom_filters.TextMatchFilter())

bot.infinity_polling()
